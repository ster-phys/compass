name: Get card abbreviations

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"


jobs:
  get_abbreviations:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: "${{ github.repository }}.wiki"
          path: .wiki

      - name: Generate abbs json
        run: |
          WIKI_PATH=.wiki/Home.md
          ABBS_JSON=compass/data/abbs.json
          json="{ "
          while read line; do
              if [[ $line =~ ^\|\ ([0-9]{6,})\ \|\ [NRSU]{1,2}\ \|\ .\ \|\ .+\ \|\ (.*)\ \|$ ]]; then
                  json="$json\"${BASH_REMATCH[1]}\":[\"${BASH_REMATCH[2]//, /\",\"}\"],"
              fi
          done < $WIKI_PATH
          json=${json/%?/}}
          echo $json | jq "." > $ABBS_JSON

      - name: Generate commit message
        id: commit
        working-directory: .wiki
        run: |
          export BASE_MESSAGE="[actions] Update abbreviations json\n\n\n"
          export CO_AUTHORS=$(git log --after '$(date +"%Y-%m-%d +0000" --date "1 day ago")' --pretty='Co-authored-by: %an <%ae>' | sort | uniq)
          export COMMIT_MESSAGE="$BASE_MESSAGE""$CO_AUTHORS"
          echo "COMMIT_MESSAGE="$COMMIT_MESSAGE"" >> $GITHUB_OUTPUT

      - name: Stage and count changes
        id: staging
        run: |
          git add compass/data/abbs.json
          echo "NUM_OF_STAGED=$(git diff --staged --name-only | wc -l)" >> $GITHUB_OUTPUT

      - name: Push to master
        if: steps.staging.outputs.NUM_OF_STAGED > 0
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add compass/data/abbs.json
          echo -e "${{ steps.commit.outputs.COMMIT_MESSAGE }}" | git commit -F -
          git push

      - name: Remove unneeded files
        run: |
          rm -rf .wiki
